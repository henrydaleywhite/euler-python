"""Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def sum_fibo_with_max(max_num):
    """return the sum of numbers in the fibonacci sequence
    which do not exceed the max_num parameter
    """
    fibo_list = fibo_with_max(max_num)
    answer = sum_even_terms(fibo_list)
    return answer


def fibo_with_max(max_num):
    """return a list of numbers in the fibonacci sequence up to the max"""
    fibo_list = [1, 2]
    while True:
        sum_last_two = fibo_list[-1] + fibo_list[-2]
        if sum_last_two > max_num:
            return fibo_list
        fibo_list.append(sum_last_two)


def sum_even_terms(term_list):
    """return the sum of all even numbers in a list"""
    list_to_sum = [number for number in term_list if number % 2 == 0]
    return sum(list_to_sum)


if __name__ == "__main__":
    print(sum_fibo_with_max(4000000))